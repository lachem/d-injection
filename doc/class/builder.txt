 Dependency Injection - Header link:../../di/builder.hpp[<builder.hpp>]
======================================================================


Class builder
-------------



Synopsis
~~~~~~~~

---------------------------------------------------------------------
namespace di
{
  template<typename C, typename I> class builder : public abstract_builder< I >
  {
    builder();
    smart_ptr<I>::single_ptr build();
    virtual void build(I &instance);
    abstract_builder<I >& use(U &object);
    abstract_builder<I >& use(const SPtr< U > &object);
    abstract_builder<I >& replace(U &object, size_t at=0);
    abstract_builder<I >& replace(const SPtr< U > &object, size_t at=0);
    abstract_builder<I >& remove(size_t at=0);
  };
}
---------------------------------------------------------------------


Functions
~~~~~~~~~

---------------------------------------------------------------------
builder()
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
smart_ptr<I>::single_ptr build()
---------------------------------------------------------------------

Creates an object of type C, performs injections and calls constructed() on subject. 







*Requires:* Injections required by the object under construction were provided to the builder.  +
*Effects:* none +
*Postconditions:* All provided injections have been injected, subject<T...>::constucted() has been called.  +
*Returns:* New instance of subject type.  +
*Throws:*  Depending on diagnostics method chosen.  +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
virtual void build(I &instance)
---------------------------------------------------------------------

Performs injections and calls constructed() on subject. 







*Requires:* Injections required by the instance object were provided to the builder.  +
*Effects:* none +
*Postconditions:* All provided injections have been injected, subject<T...>::constucted() has been called.  +
*Returns:* none +
*Throws:*  Depending on diagnostics method chosen.  +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
abstract_builder<I >& use(U &object)
---------------------------------------------------------------------




*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
abstract_builder<I >& use(const SPtr< U > &object)
---------------------------------------------------------------------




*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
abstract_builder<I >& replace(U &object, size_t at=0)
---------------------------------------------------------------------




*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
abstract_builder<I >& replace(const SPtr< U > &object, size_t at=0)
---------------------------------------------------------------------




*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
abstract_builder<I >& remove(size_t at=0)
---------------------------------------------------------------------




*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* none +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +



include::../footer.txt[]
