 Dependency Injection - Header link:../../di/generic_builder.hpp[<generic_builder.hpp>]
======================================================================================


Class generic_builder
---------------------

Generic Builder is a convient facility to build objects with injections. It does not require the subject to be of any specific type, but to define which injections are to be handled by . Therefore using < subject<T1,T2> > is perfectly fine. The drawback of  is that it does not support abstraction i.e. build and build_part methods cannot be mocked nor can build or build_part be used to perform injections through interfaces. 


Synopsis
~~~~~~~~

---------------------------------------------------------------------
namespace di
{
  template<typename S> class generic_builder : public configurable< S >
  {
    void build(C &instance);
    void build_part(C &instance);
    generic_builder<S>& use(U &object);
    generic_builder<S>& use(const SPtr< U > &object);
    generic_builder<S>& replace(U &object, size_t at=0);
    generic_builder<S>& replace(const SPtr< U > &object, size_t at=0);
    generic_builder<S>& remove(size_t at=0);
    bool build_inject(C *instance);
  };
}
---------------------------------------------------------------------


include::../footer.txt[]
