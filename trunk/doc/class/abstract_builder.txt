 Dependency Injection - Header link:../../di/abstract_builder.hpp[<abstract_builder.hpp>]
========================================================================================


Class abstract_builder
----------------------

Abstract Builder provides convinient abstraction for building objects of abstract or concrete types. The main advantage of using  is the possibility to mock build methods. If the user does not need mocking or can test building using other means (checking injections directly) then using more convinient  is advised. 


Synopsis
~~~~~~~~

---------------------------------------------------------------------
namespace di
{
  template<typename T> class abstract_builder : public di::configurable< T >
  {
    virtual T* build()=0;
    virtual void build(T &instance)=0;
    abstract_builder<T>& use(U &object);
    abstract_builder<T>& use(const SPtr< U > &object);
    abstract_builder<T>& replace(U &object, size_t at=0);
    abstract_builder<T>& replace(const SPtr< U > &object, size_t at=0);
    abstract_builder<T>& remove(size_t at=0);
  };
}
---------------------------------------------------------------------


include::../footer.txt[]
