 Dependency Injection - Header link:../../di/configurable.hpp[<configurable.hpp>]
================================================================================



Class configurable
------------------




Synopsis
~~~~~~~~

---------------------------------------------------------------------
namespace di
{
  template<typename T> class configurable
  {
    BOOST_MPL_ASSERT_MSG((boost::is_base_of< detail::subject_base, T >::value), ProvidedTypeDoesNotDeriveFromSubject,);
    void do_usage(U &object);
    void do_replacement(U &object, size_t at);
    void do_removal(size_t at);
    virtual void out_of_bounds();
    configurable<T>& use(U &object);
    configurable<T>& use(const SPtr< U > &object);
    configurable<T>& replace(U &object, size_t at=0);
    configurable<T>& replace(const SPtr< U > &object, size_t at=0);
    configurable<T>& remove(size_t at=0);
  };
}
---------------------------------------------------------------------


Functions
~~~~~~~~~

---------------------------------------------------------------------
BOOST_MPL_ASSERT_MSG((boost::is_base_of< detail::subject_base, T >::value), ProvidedTypeDoesNotDeriveFromSubject,)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
void do_usage(U &object)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
void do_replacement(U &object, size_t at)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
void do_removal(size_t at)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
virtual void out_of_bounds()
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
configurable<T>& use(U &object)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
configurable<T>& use(const SPtr< U > &object)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
configurable<T>& replace(U &object, size_t at=0)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
configurable<T>& replace(const SPtr< U > &object, size_t at=0)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +

---------------------------------------------------------------------
configurable<T>& remove(size_t at=0)
---------------------------------------------------------------------

*Requires:* none +
*Effects:* none +
*Postconditions:* none +
*Returns:* none +
*Throws:* no +
*Complexity:* no info +
*Note:* none +
*Danger:* none +
*Rationale:* none +



include::../footer.txt[]
